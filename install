#!/bin/bash
#
# install - a simple installer for Eclipse in Debian/Ubuntu/Mint
#
#    Copyright (C) 2012 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>

# ---------------------------------------------------------------
# User-modifiable stuff...

# App name in menus, Launchers, etc (inside .desktop file)
name=Eclipse

# executable (also affects dir, icon and .desktop file names)
exec=eclipse

# icon - Will be renamed according to exec, preserving extension
icon=eclipse.png # default icon may be embedded or relative to install dir
usericon=0 # leave at 0. if 1 user will be forced to choose an icon

# install prefix for system-wide install
sysprefix=/opt

# install prefix for user install
userprefix=$HOME/.local/opt

# install type: 1 for system-wide, 0 for user
system=1

# user (and group) name to own install dir and files in system-wide installs
owner=eclipse # there's no point in changing this...

url=http://www.eclipse.org/downloads/
verbose=1

# ---------------------------------------------------------------
# Boring UI stuff...

myname="${0##*/}"
mydir=$(dirname "$(readlink -f "$0")")

fatal()   { [[ "$1" ]] && echo "$myname: error: $1" >&2 ; exit ${2:-1} ; }
invalid() { echo "$myname: invalid option: $1" >&2 ; usage 1 ; }
missing() { echo "$myname: missing ${1:+$1 }operand" >&2 ; usage 1 ; }
message() { ((verbose)) && echo "$1" ; }
quit()    { message "Goodbye!" ; exit; }

usage() {
	cat <<- USAGE
	Usage: $myname [options] [--|--tarball FILE]
	USAGE
	if [[ "$1" ]] ; then
		cat >&2 <<- USAGE
		Try '$myname --help' for more information.
		USAGE
		exit 1
	fi
	cat <<USAGE

A simple installer for Eclipse in Debian/Ubuntu/Mint

Options:
-h|--help     - show this page.
-v|--verbose  - print more details about what is being done.

--system
--user
	choose system-wide or per-user install. Default is system

--exec=NAME
	executable name, also used as a prefix for for naming the
	install directory, icon and .desktop files. Default "$exec"

--prefix=DIR
	parent of the install directory. Default is "$sysprefix"

--name=NAME
	friendly application name, for meny entries. Default "$name"

--tarball FILE
	the tar.gz install archive downloaded from Eclipse. If none is
	provided, a menu will show currently downloaded files.

Copyright (C) 2012 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
USAGE
	exit 0
}

for arg in "$@"; do case "$arg" in -h|--help) usage ;; esac; done
while (( $# )); do
	case "$1" in
	-h|--help     ) usage                        ;;
	-v|--verbose  ) verbose=1                    ;;
	--name=*      ) name="${1#*=}"               ;;
	--exec=*      ) exec="${1#*=}"               ;;
	--prefix=*    ) prefix="${1#*=}"             ;;
	--tarball=*   ) tarball="${1#*=}"            ;;
	--icon=*      ) argicon="${1#*=}"
	                usericon=1                   ;;
	--name        ) shift ; name="$1"            ;;
	--exec        ) shift ; exec="$1"            ;;
	--prefix      ) shift ; prefix="$1"          ;;
	--tarball     ) shift ; tarball="$1"         ;;
	--icon        ) shift ; argicon="$1"
	                        usericon=1           ;;
	--system      ) system=1                     ;;
	--user        ) system=0                     ;;
	--            ) shift ; tarball="$1"   break ;;
	*             ) invalid "$1" ; shift ; break ;;
	esac
	shift
done

[[ "$name" ]] || missing "name"
[[ "$exec" ]] || missing "exec"

if (( system )) ; then
	[[ "$prefix" ]] || prefix=$sysprefix
	execdir=/usr/bin
	icondir=/usr/share/icons/hicolor/48x48/apps
	appdir=/usr/share/applications
	sudo=sudo
	label="system"
else
	[[ "$prefix" ]] || prefix=$userprefix
	execdir=$HOME/bin
	icondir=$HOME/.local/share/icons/hicolor/48x48/apps # no pixmaps/ for user
	appdir=$HOME/.local/share/applications
	sudo=env
	label="user"
fi

((verbose)) && v=v

dir=${prefix}/${exec}

# ---------------------------------------------------------------
# Installer begins here (but still boring)

((verbose)) && printf "\nECLIPSE INSTALLER\n\n"

[[ "$tarball" ]] || {
	cd "$mydir"

	options=( *.tar.gz "Download more at $url" )

	message "Available installs:"
	PS3="Choose an install (0 to quit): "

	select tarball in "${options[@]}"; do
		((REPLY==${#options[@]})) && {
			message "Opening your web browser..." ;
			message "Choose your Eclipse flavor(s), download and save to"
			message "$mydir"
			message "... and run me again"
			xdg-open "$url"
			REPLY=0
		}
		((REPLY==0)) && quit
		[[ "$tarball" ]] && break
	done
	echo ""
}

((verbose)) && {
	echo "Install details:"
	echo "App name    = $name"
	echo "Executable  = $exec"
	echo "Install dir = $dir"
	echo "Source      = $tarball"
	echo "System-wide = $system"
	echo "To change these options, see $myname --help"
	read -r -p "Confirm? (YES,no): " confirm
	case "$confirm" in
	[Nn]*) quit
	esac
	echo ""
}

#TODO: offer to uninstall and remove cruft from other installs
# for both user and system, offer to delete ~/.eclipse
read -r -p "Remove any previously ${label}-installed Eclipse? (yes,NO): " confirm
case "$confirm" in
[Yy]*)
	message "removing cruft from all other Eclipse $label installs"
	if (( system )); then
		#sudo apt-get purge eclipse
		sudo rm -rf {/opt,/etc,/usr{,/share,/local}{/bin,/lib,/applications,/pixmaps}}/eclipse37*
	else
		rm -rf "$HOME"/.{,local}{/opt,/bin,/share{/applications,/pixmaps}}/eclipse37*
		#rm -rf "$HOME"/.eclipse
	fi
;;
esac

#TODO: if exec == eclipse, warn about overwriting (if system)
#      or eclipsing (if user) current system install

[[ -e "$dir" ]] && {
	read -r -p "Install directory $dir already exists. Delete it before proceding? (yes,NO): " confirm
	case "$confirm" in
	[Yy]*) message "removing $dir" ;
	       $sudo rm -rf "$dir" || fatal "could not remove $dir" ;;
	    *) quit
	esac
}

# ---------------------------------------------
# Now the fun begins

{ ((system)) && ! id "$owner" > /dev/null 2>&1 ; } && {
	message "creating $owner user and group"
	sudo useradd --system "$owner" ||
		fatal "could not create user $owner"
}

$sudo mkdir -p${v} "$dir" ||
	fatal "could not create install dir $dir"

message "extracting $tarball to $dir"
$sudo tar -xzf "$tarball" --strip-components=1 --directory "$dir" ||
	fatal "could not extract source $tarball in $dir"

((system)) && {
	message "adjusting ownership and permitions in $dir"
	sudo chown -R "${owner}:" "$dir"        || fatal "could not set owner of $dir to $owner"
	sudo chmod -R g+w "$dir"                || fatal "could not set permitions $dir to g+w"

	message "including your user $USER to $owner group"
	sudo usermod --groups "$owner" "$USER" || fatal "could not add $USER user to $owner group"
}

message "creating symlink to $dir/eclipse executable in $execdir/$exec"
$sudo mkdir -p${v} "$execdir"               || fatal "could not create executable directory $execdir"
$sudo ln -s "$dir/eclipse" "$execdir/$exec" || fatal "could not create symlink $execdir/$exec"

message "copying icon to $icondir/$exec.png"
$sudo mkdir -p${v} "$icondir"               || fatal "could not create icon directory $icondir"
copyicon "$icondir" "$exec"                 || fatal "could not create icon $icondir/$exec"

message "creating desktop file in $appdir/$exec.desktop"
$sudo mkdir -p${v} "$appdir"                || fatal "could not create desktop directory $appdir"
{ $sudo dd of="$appdir/$exec.desktop" status=noxfer 2>/dev/null ||
  fatal "could not desktop entry $appdir/$exec.desktop" ; } <<-DESKTOP
	[Desktop Entry]
	Type=Application
	Name=$name
	Comment=Eclipse Integrated Development Environment
	Icon=$exec
	Exec=$exec
	Terminal=false
	Categories=Development;IDE;Java;
DESKTOP

message ""
message "Done! Log out for changes to apply"

# Precedence order for icons:
# if command-line option was used,
# - argicon, if file exists
# - argicon, if basename is found embedded
# if command line option was not used,
# - default icon, if basename is found embedded
# - default icon, if file exists relative to install dir
# if all the above fails, use icon.xpm inside the source archive
# (this can be forced by user by setting argicon to a blank string)
copyicon(){
#	if ((usericon)) ; then
#		[[ "$argicon" ]] || break
#		[[ -f "$argicon" ]] && icon="$argicon" ; break
#
#
#	else
#		"$icondir/$exec.png"
#	${sudo} dd if= of="$appdir/$exec.desktop" status=noxfer 2>/dev/null
#|| of="$appdir/$exec.desktop" status=noxfer 2>/dev/null

#$sudo dd if=<(icondata)
#cp${v:+ -$v} <(decode "eclipse.png") "$icondir/$exec.png"


#	argicon
}

# eclipse.png from debian's package. it looks MUCH better than eclipse's
# original icon. And converting from PNG to XPM does not help much, since PNG
# supports alpha transparency and XPM does not. So the PNG is uuencoded here
decode(){
local name="$1"
shift
case "$name" in
"eclipse.png") uudecode "$@" <<-'EOF'
begin-base64 644 eclipse.png
iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAAK/I
NwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAut
SURBVHja7FprrBVXFV4z55x77gPKQ16XSwtcW1BSrdKIiYEYsGpTUWOINPzw
T9XEJhpjqjFo1RRtGqKkJhCNpto/jfQRJSU8rFKqkZaIrUHFKNpUGq69vHoB
zz33nDNn1l6u/Zy151wo/DJNPGTfPbNnz8x6fOs5JEQEb+ZfCm/yX1X/eWnH
IXPy9OV6uJDwuBbdfHxWZy0BbWpguu5iDqP/yWEmj8pkrpImEmSogBRBSqRq
iWpVAMZzpY5OtPN9iOqYInVKKQUK9UDgc0C+z5wT8rEyQym+pvQxmmvIx4cP
f8Uy4H/btq27Jq7//KPfLUkr6bcygg+fadZHxpsqHW8TNB2xGpZK2WGODTEq
nUI1xGs38/HNvPapakqTmNOBHNUeJm4/rzcM8UysJlAPT7hZQ8ecuxY0cK2/
Ez95YX61v/rDvjlDH7yY1m4YbyKc6SI0Ohl0IDPEG6L1TJpofWxnwxDZl5tr
PHdzNYPXNzMzmwHUc0zcY0zobiaupa8TKke8JRz9sbJauC4GTj7+4ncGF8z4
bHdocMH5DsHZKQWdWg6DAwkkbElVflKjQZB3FbTaXasJR7SWHJGVmp5VIMxK
W9m19UzYep7v4GuP8HwYnSYMZNBDyN17PQy8vOf4szNGZr+/2ddXuZgl0GFs
DvDDUyZcD82AJrbR6Dj4OKmTx7XThCJBvApQMHuU36O2MOG387yTr+3y11TY
V0DrDRn422PHbqrPHjg4c/m8Vc20ClMqgWpFQT1JDKE5JubhXZZ6luXMTMKw
QHONFAY4kYMNCfiUibcSRs/kCr72MF9bxMfb+bih96HQAL6RBhzxh2bcNPeW
Vq0PkDEySJpYTSBAzoRWmOBKhf1VQtZnJRQRWNiCClDw6scAJQrwUAbn6PdV
+fzrfN7P9z7A543gjdxzrspAbaC2b2jRDbdMJhVDfL1eCdcqFTSEG/gw/Wli
YaSPWTdOugESPbBRkR2g8zoUwcO6SuN57uP1Ns/3B+aFDUwbyP7+sz8c7H/L
0DsuYwoNlUIRrXl2xwYmfjaQ0SdO6srCBVWJ8PIaCj/v44A7x2Dk5virzNTn
PYw8c9My8NdHX/hGbajvjknG+0QGBjJ6tNs5D4ROhgbnxq2Fl1kYsD/nQUHq
ZAISiZcqYxs2GPF+f2xwj5HfR6UEtDSc1Bd4bQNezY1ygJpXG+z7HKVp9UIb
oM0b+xkX2otUK5Zjjf12KzdGmzEzec5EOyYxxxApDRE0veS9IRKqkmsUAQwj
GOnrK3jtM8zsURMnaBoGWP0PJ9V08XmOqmdTBf2UgwZKnqcG88bz5MoQ3mZf
3+kUo9tlDXVy6GZdi2eBcxSuEAX2C6Zi6Yf7oihs7t/C4xAz/tPp3Ogwj7u6
mYJxHu1qbl6a88urldQYrDZ8/cCMpd1hBrQmWq2ugVdHD2Ykl8SqwtMUhGEU
jFAYOkYMxy5T2M3dLKCneK1RZmCrytXccxxhx/klfX1gbux2WfpV62mM+9Q4
Z/h0Mku8GVMZTLUyw4TLe0peRjDjA52K4BGCVI8WItdrrn2In/URnh8vM3CX
Ysn+m6U6lWqsVw0sqtU0RFwfSbURaxtoa+JZE81mB5pTHbM/vJRkBundJxYe
Bkt2IexDEu01FlyypeHOiAEW7Fqelk0xrMYmWcIpY7oPoVZLGT4617HJtU8J
rGfKjR1MMRNTzEA3y0UAU0VgojgBQ5k6q3KqrEQ8wFIMiRj5AB8vY6JOeQ1s
YiYqEzlA06UC3W5ipK+NN+EIq4eGkMan0UBHY15rITPnPd4GpyECS8YbXGjJ
bQpmKYJXeM4SntdIBtZoGZ8cngezh+O4kJg/iYmyJnDoaOvO9ZLWjv5n1sEy
q/GWmgjt9xVRW98b1vWeNHHR3C4k0TvsebfLno4F1Wpx0t6xtpZl2RN86UkL
IQKtDhh45QKMtZWRtJYCKQgJFrooq6VKDuPSO8S+W/p8jLRhzyk+D9jHOEor
6oEYkU/+1J6tX9wQbGCOnifzcjHiC5EC2+SZifw52XOcBkKBeAopAwqvVBBI
sTH3FDTeMYQKb7TwQgnVgTizXDEf5pVzCw8VKNTuVWvh46FCGigWQk79Nsnj
5ybxvX49dc9IHR4D3CRE3f4s6xp7a7c7DCEDo9uEG01Sph8u/OUM5yfK1bJC
CuS8A6JdR5v7+D0cP0IkFelwkK6EDaLPPDGCXNl1SliGyK7sc5xWuvfduxa8
DbjM0kHHEx9upEjNRbbp1gjjiqkccZWAjfAsvdkqRnWvtTmZlpBIyQlEHNBb
IZ3/zsW9uXWShJQ1SWzxEmAASagH7D7nrVJ33XuaJBXnifU8ILxUWni21GEp
jSA6LYRqMpB1ePtA88QYTLRRRjwbvn0rQ8MmkpL3PFRACJXIIjHOeUJZiJGn
Cdpwno1QZLJYlKIautoLuWLpTxpCXrgXtUIGdbogXmagEaKfYEx6EeXLwIJg
9LagZHGCogb2e6gU2IooTjIfIlFLqOAdX5EaOMWQWpysWgJLezHEKiTrh6w7
sl5DBpzUeQ/9NyUHrSRApmLxFvaHIJcKr+QeHmDnnqEDoIeP3nH5YsNkvbz2
iYIBgmPM1/uW/Os1+O1rzelLwZJhypwGe1LknmKkt68TFTAWhgYeGNcSppuB
0pko27ohdbcOZKnVQPJz5hvn1FPor0CphkUodwN8SRi7TYxagkUxUq6NMTSq
UCR95ObgXqW3oyKbtfaAYzwfK2riBI5oGM3g7HPhQDWSUGHAcYEijRFF+09h
Hvn2HuNFaU8x7gsbE40BdFHeZQamgYDwLB+eCgy4zsIB7UsXD1aF5EgEIix5
nt5GE6pcBKlCU3FlRlEqURi0lDSFYeACjomiz/RLUqKtos2OI/FDrIrXR2bW
YXio5ggSMCAVumeBcBFpI5so5/tYJG7+mYSyS0elnqnIg6hIHp2gf8VjP7nm
v9AAjPPSXi4BYNmsfpuNoor7NqWsMbaPcviXVRhFmWbUZSYlMk0q7CQkkBCI
d8w+wccNE3oDA4lLJYC+zNp4dXT2AIzOHjR5kcQ5RqmyNGoqsk2lQhpc9PMx
SiesYcZpdchACz9fEK9CI203z7vlZzGnAQ2hBH78x7EJPtvJVVi2cv4QzKpX
ShWSkDRS0VkTMPK4p5CsYckp+CTRGSqKbrZMmUk0hMFc/wfD7BEmvtXzjYxc
Qqcf/IPfn9rBh08vnjUAty6c5bJPFblLj2XfkYsMNjBEorGFRT1BIlUgFUV3
Cjg3oncMGI3kPHbyODztRz7y/5ykdh15eTOfPn/r8GxYPTI39t1Y2AGWWyEh
SyUHkVIm6nDsO9PeUEn0VFEUURY6RrrbmbFdV/xK6ZrjwkB5AHySkfXi7Uvn
w7tvnFcq0LGnW4DCHZJsG/pjjJtX1g7IDtfJ9t8VKLhQo6UdfLz9qp9ZTT3A
1Eq8fv/wCe2VPlarpM+/d3QhrFm+yDw4jqAoOstxK1EabHCTpXa7L1GJCuyT
D1gaNkQP8niASWxcnQH3URVDhLUv2fHM8fHvHnxpbV81fWrdipFsw6obYdZQ
XdS1FEEkbo04rAt3a2pph3MkEkyoELRs4FJssPQlHvdfjXjRXtc3JXE5KFLe
h/Ye28wK+trq0eFX77xtFN4+Mq+IxtjrVsP9IQhR8cUGS+7SS75IJXbz+r1X
wvwVbcAwERmn9C4KHvzFEcYirF66YM6jG9+zcuKja94GyxfNKXL/cjYqS1BZ
I4cPfhh9S07TynM8f9qNw9f1pV4FI8bpu8bOgLc98ZsJnu/55pb1w+9668jW
lUsWbDw5dm7pydPn0n+OnYOLjaaLrlRkllLKUepA0F/vm+T9B6ZanT087zcR
9jr/70aibzi4/deGge89czxuJOUoGljlz/42kH37no26r7rp7KXGutNnJ0bH
X7888+zE5cr5S43kUmMKmq22EUJ/X03112uteq063u3i0dNnz+/jdx/TWaU3
5OslnmivZeD//1vlf/j7rwADAF7FbgCmfZ6WAAAAAElFTkSuQmCC
====
EOF
;;
*) return 1 ;; # not found
esac
}
