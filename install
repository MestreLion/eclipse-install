#!/bin/bash
#
# install - an installer for Eclipse archives in Debian/Ubuntu/Mint
#
#    Copyright (C) 2012 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>

# ---------------------------------------------------------------
# User-modifiable stuff...

# App name in menus, Launchers, etc (inside .desktop file)
name=Eclipse

# executable (also affects dir, icon and .desktop file names)
exec=eclipse

# install prefix for system-wide install
sysprefix=/opt

# install prefix for user install
userprefix=$HOME/.local/opt

# install type: 1 for system-wide, 0 for user
system=0

# user (and group) name to own install dir and files in system-wide installs
owner=eclipse # there's no point in changing this...
creategroup=0 # if 0, do not create user or group

# Default source for icon: tarball, embedded or user
iconsource=tarball

# Known files - do not edit unless embedded data or tarball icon does not match
icon_embedded=eclipse-48.png 
icon_tarball=icon.xpm
manpage=eclipse.1.gz

# Flags and etc...
url=http://www.eclipse.org/downloads/
verbose=1
uninstall=0
extractmanual=0
extracticon=0
size=0

# ---------------------------------------------------------------
# Boring UI stuff...

myname="${0##*/}"
mydir=$(dirname "$(readlink -f "$0")")

fatal()   { [[ "$1" ]] && echo "$myname: error: $1" >&2 ; exit ${2:-1} ; }
invalid() { echo "$myname: invalid option: $1" >&2 ; usage 1 ; }
missing() { echo "$myname: missing ${1:+$1 }operand" >&2 ; usage 1 ; }
message() { ((verbose)) && echo "$1" ; }
quit()    { message "Goodbye!" ; exit; }
extract() { message "Extracting $1" ; decode "$1" > "$1" ; exit ; }
decode(){
    # Generated by dataembed
    # Usage: decode [--find] FILE
    # Feel free to move this function to a more convenient location,
    # and also to remove the comments. Closing } must be on a line of its own
    # This function will only be re-created if deleted
    local s f;while(($#));do case "$1" in --find)s=1;; *)f=$1;;esac;shift;done
    if d=$(awk -v f="$f" -v p=0 -v e=0 -v s=$s 'p&&/^_EOF_$/{exit}p{print;next
    } e&&/^:<<"_EOF_"$/{getline;if($0==f){p=1;if(s)exit}} /^exit;:$/{e=1} END{
    exit !p}' "$(readlink -f "$0")");then base64 -d <<<"$d"; else return 1; fi
}

usage() {
	cat <<- USAGE
	Usage: $myname [options] [--|--tarball FILE]
	USAGE
	if [[ "$1" ]] ; then
		cat >&2 <<- USAGE
		Try '$myname --help' for more information.
		USAGE
		exit 1
	fi
	cat <<USAGE

An installer for Eclipse in Debian/Ubuntu/Mint

Allows system-wide or per-user install, and also coexistence of multiple
versions. Extracts original tarball and properly creates desktop file, icon,
executable and, if system install, man page.

Also, for system install, creates "$owner" user and group and add current user
to group. This allows plugins and software updates to be installed by the user,
and be available to all users.

Tested with Eclipse 3.5, 3.6, 3.7 and 4.2

Options:
-h|--help  - show this page.
-q|--quiet - supress informative messages.

--system
--user
	choose system-wide or per-user install. Default is system

--create-group
    if system install, creates '$owner' user and group, instead of installing
    Eclipse as root. Also adds current user to the newly-created group. This
    won't be undone by uninstall

--exec=NAME
	executable name, also used as a prefix for naming the install directory,
	icon and .desktop files. Default is "$exec"

--prefix=DIR
	parent of the install directory. Default is "$sysprefix"

--name=NAME
	friendly application name, for menu entries. Default is "$name"

--tarball-icon
--embedded-icon
	Use either the embedded icon in install file (recommended for
	eclipse 3.x) or the icon inside the tarball archive (for eclipse 4.x).
	Default is to use the $iconsource icon.

--custom-icon=FILE [--icon-size=SIZE]
	Use the custom icon FILE. If ImageMagik is not installed and icon is not
	a conventional .xpm file, icon SIZE (32, 48, 64, etc) must be provided.

--tarball=FILE
	the tar.gz install archive downloaded from Eclipse website. If none is
	provided, a menu will show currently downloaded files.

--extract-manual
--extract-icon
	Only extract the either the manual page "$manpage" or the icon embedded
	in install file "$icon_embedded" to current dir, and exit.
	Do not perform any install.

--uninstall
	Uninstall ${name}. Combine with --system, --exec and --prefix to
	uninstall from a custom install

Copyright (C) 2012 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
USAGE
	exit 0
}

for arg in "$@"; do case "$arg" in -h|--help) usage ;; esac; done
while (( $# )); do
	case "$1" in
	-h|--help        ) usage                        ;;
	-q|--quiet       ) verbose=0                    ;;
	--name=*         ) name="${1#*=}"               ;;
	--exec=*         ) exec="${1#*=}"               ;;
	--prefix=*       ) prefix="${1#*=}"             ;;
	--tarball=*      ) tarball="${1#*=}"            ;;
	--icon-size=*    ) size="${1#*=}"               ;;
	--custom-icon=*  ) icon="${1#*=}"
	                   iconsource="user"            ;;
	--name           ) shift ; name="$1"            ;;
	--exec           ) shift ; exec="$1"            ;;
	--prefix         ) shift ; prefix="$1"          ;;
	--tarball        ) shift ; tarball="$1"         ;;
	--icon-size      ) shift ; size="$1"            ;;
	--custom-icon    ) shift ; icon="$1"
	                   iconsource="user"            ;;
	--tarball-icon   ) iconsource="tarball"         ;;
	--embedded-icon  ) iconsource="embedded"        ;;
	--extract-manual ) extractmanual=1              ;;
	--extract-icon   ) extracticon=1                ;;
	--create-group   ) creategroup=1                ;;
	--system         ) system=1                     ;;
	--user           ) system=0                     ;;
	--               ) shift ; tarball="$1"   break ;;
	*                ) invalid "$1" ; shift ; break ;;
	esac
	shift
done

# Extraction (and exit)--------------------------------------------

(( extractmanual )) && extract "$manpage"
(( extracticon   )) && extract "$icon_embedded"

# Other arguments      --------------------------------------------

[[ "$name" ]] || missing "name"
[[ "$exec" ]] || missing "exec"

case "$iconsource" in
	embedded ) icon="$dir/$icon_embedded" ;;
	tarball  ) icon="$icon_tarball"  ;;
	user     ) [[ "$icon" ]]    || missing "custom-icon"
	           [[ -f "$icon" ]] ||
			fatal "custom icon file '$icon' not found" ;;
esac

if (( system )) ; then
	[[ "$prefix" ]] || prefix=$sysprefix
	execdir=/usr/local/bin
	appdir=/usr/local/share/applications
	mandir=/usr/local/share/man/man1/$manpage
	sudo=sudo
	label="system"
else
	[[ "$prefix" ]] || prefix=$userprefix
	execdir=$HOME/.local/bin
	appdir=$HOME/.local/share/applications
	sudo=env
	label="user"
fi

((verbose)) && v=v

dir=${prefix}/${exec}
config=".eclipse" # if system install, regardless of $exec


# Uninstall  ---------------------------------------------

((uninstall)) && {

	msg="Are you sure you want to remove ${exec} ${label} install?"
	read -r -p "$msg (yes,NO): " confirm
	case "$confirm" in
	[Yy]*)
		message "removing desktop file"
		$sudo rm -rf "$appdir/$exec.desktop"
		$sudo update-desktop-database "$appdir"

		message "removing icon"
		for icon in "$dir"/bin/*.{png,xpm} ; do
			size=${icon##*-}
			size=${size%%.*}
			$sudo xdg-icon-resource uninstall --noupdate \
				--size "$size" "$exec" 2>/dev/null
		done
		$sudo xdg-icon-resource forceupdate

		(( system )) && {
			message "removing manual"
			$sudo rm -rf "$mandir/$manpage"
		}

		message "removing executable"
		$sudo rm -rf "$execdir/$exec"

		message "removing install dir"
		$sudo rm -rf "$dir"

		message "Successfully uninstalled $name"
	;;
	esac

	exit
}

# ---------------------------------------------------------------
# Installer begins here (but still boring)

((verbose)) && printf "\n${name^^} INSTALLER\n\n"

[[ "$tarball" ]] || {

	cd "$mydir"
	shopt -s nullglob
	options=( *.tar.gz "Download more at $url" )
	shopt -u nullglob

	message "Available installs:"
	PS3="Choose an install (0 to quit): "

	select tarball in "${options[@]}"; do
		((REPLY==${#options[@]})) && {
			message "Opening your web browser..." ;
			message "Choose your Eclipse flavor(s), download and save to"
			message "$mydir"
			message "... and run me again"
			xdg-open "$url"
			REPLY=0
		}
		((REPLY==0)) && quit
		[[ "$tarball" ]] && break
	done
	echo ""
	tarball="${mydir}/${tarball}"
	cd - >/dev/null
}

((verbose)) && {
	echo "Install details:"
	echo "Install Type = $label"
	echo "App name     = $name"
	echo "Executable   = $exec"
	echo "Icon         = $icon"
	echo "Icon Source  = $iconsource"
	echo "Install dir  = $dir"
	echo "Source       = $(basename "$tarball")"
	echo "To change these options, see $myname --help"
	read -r -p "Confirm? (YES,no): " confirm
	case "$confirm" in
	[Nn]*) quit
	esac
	echo ""
}

[[ -e "$dir" ]] && {
	msg="Install directory $dir already exists. Delete it before proceding?"
	read -r -p "$msg (yes,NO): " confirm
	case "$confirm" in
	[Yy]*) message "removing $dir" ;
	       $sudo rm -rf "$dir" || fatal "could not remove $dir" ;;
	esac
}

[[ "$exec" == eclipse && -e "/usr/bin/eclipse" ]] && {
	msg="You've chosen the default 'eclipse' name, and eclipse is\nalready "
	msg+="installed via package manager at /usr/bin/eclipse\nNo files will"
	msg+=" be overwritten, but that install will be be\nunaccessible unless"
	msg+=" you invoke it by its full path name.\nIf you want to remove it"
	msg+=" first, exit now and issue:\n	apt-get purge eclipse*\n"
	printf "$msg"
	msg="Do you want to proceed?"
	read -r -p "$msg (yes,NO): " confirm
	case "$confirm" in
	[Nn]*) quit
	esac
}

# ---------------------------------------------
# Some neat helper functions

icon_size()
{
	local icon="$1"
	local size="$2"
	local filetitle="${icon%.*}"
	
	((size)) && { echo "$size" ; return ; }
	
	if type identify >/dev/null 2>&1; then
		identify -format '%w' "$icon"
	else
		if [[ "${filetitle,,}.xpm" == "$icon" ]]; then
			awk 'NR==3{print $2}' "$icon"
		else
			return 1
		fi
	fi
}

# ---------------------------------------------
# Now the fun begins

{ ((system)) && ! id "$owner" > /dev/null 2>&1 ; } && {
	message "creating $owner user and group"
	sudo useradd --system "$owner" ||
		fatal "could not create user $owner"
}

$sudo mkdir -p${v} "$dir" ||
	fatal "could not create install dir $dir"

message "extracting $(basename "$tarball") to $dir"
$sudo tar -xzf "$tarball" --strip-components=1 --directory "$dir" ||
	fatal "could not extract source $tarball in $dir"

((system)) && {
	((creategroup)) && {
		message "adjusting ownership and permitions in $dir"
		sudo chown -R "${owner}:" "$dir" || fatal "could not set owner of $dir to $owner"
		sudo chmod -R g+w "$dir"         || fatal "could not set permitions $dir to g+w"

		message "including your user $USER to $owner group"
		sudo usermod --append --groups "$owner" "$USER" ||
			fatal "could not add $USER user to $owner group"
		logout=1
	}
	message "installing man page to $mandir/$manpage"
	sudo mkdir -p${v} "$mandir"
	sudo dd of="$mandir/$manpage" status=noxfer < <(decode "$manpage") 2>/dev/null ||
		fatal "could not install manpage to $mandir/$manpage"
}

message "creating symlink to $dir/eclipse executable in $execdir/$exec"
$sudo mkdir -p${v} "$execdir" ||
    fatal "could not create executable directory $execdir"
$sudo rm -f "$execdir/$exec" && $sudo ln -s "$dir/eclipse" "$execdir/$exec" ||
	fatal "could not create symlink $execdir/$exec"

message "installing icon"
case "$iconsource" in
	embedded)
		$sudo dd of="$dir/$icon" status=noxfer < <(decode "$icon") \
			2>/dev/null || fatal "could not extract embedded icon"
		icon="$dir/$icon_embedded"
		size=${icon##*-}
		size=${size%%.*}
	;;
	tarball)
		size=$(icon_size "$dir/$icon_tarball" "$size") ||
			fatal "could not determine icon size. Use --icon-size=SIZE"
		filetitle=${icon_tarball%.*}
		fileext=${icon_tarball#"$filetitle"}
		icon="${dir}/${filetitle}-${size}.${fileext}"
		$sudo mv "$dir/$icon_tarball" "$icon"
	;;
	user)
		size=$(icon_size "$dir/$icon" "$size") ||
			fatal "could not determine icon size. Use --icon-size=SIZE"
		filetitle=${icon%.*}
		fileext=${icon#"$filetitle"}
		newicon="${filetitle}-${size}.${fileext}"
		$sudo cp "$icon" "$dir/$newicon"
		icon=$newicon
esac
$sudo xdg-icon-resource install --novendor --size "$size" "$icon" "$exec" ||
	fatal "could not install icon"

message "creating desktop file in $appdir/$exec.desktop"
$sudo mkdir -p${v} "$appdir" || fatal "could not create desktop directory $appdir"
{ $sudo dd of="$appdir/$exec.desktop" status=noxfer 2>/dev/null ||
  fatal "could not desktop entry $appdir/$exec.desktop" ; } <<-DESKTOP
	[Desktop Entry]
	Version=1.0
	Type=Application
	Name=$name
	Comment=Eclipse Integrated Development Environment
	Icon=$exec
	Exec=$exec
	Terminal=false
	StartupNotify=true
	Categories=Development;IDE;Java;
DESKTOP

((system)) || {
	addpath=1
	SAVED_IFS=$IFS
	IFS=:
	for pathdir in $PATH ; do
		[[ "$pathdir" == "$execdir" ]] && { addpath=0 ; break ; }
	done

	((addpath)) && {
		logout=1
		relexecdir=${execdir#$HOME/}
		message "adding ~/${relexecdir} to you \$PATH in ~/.profile"
		cat >> "$HOME/.profile" <<-EOF

		# Included by $name $label install
		# set PATH so it includes user's ~/${relexecdir} if it exists
		if [ -d "\$HOME/$relexecdir" ] ; then
		    PATH="\$HOME/$relexecdir:\$PATH"
		fi
		EOF
	}
	IFS=$SAVED_IFS
}

message ""
message "Succesfully installed ${name}!"
((logout)) && echo "Log out for changes to apply..."


# eclipse.png from debian's package. it looks MUCH better than eclipse's
# original icon. And converting from PNG to XPM does not help much, since PNG
# supports alpha transparency and XPM does not. So the PNG is encoded here
# Also encoded debian's man page for Eclipse, source archive misses it

# Generated by dataembed - DO NOT EDIT AFTER THIS LINE! ---------------
exit;:
:<<"_EOF_"
eclipse-48.png
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
AF7FbgCmfZ6WAAAAAElFTkSuQmCC
_EOF_
:<<"_EOF_"
eclipse.1.gz
H4sIAAAAAAACA81bbW8bOZL+zl9BeBcXe05uT7J7i8XAZ1wmcTYe2LFheWbnEAUDSk1JjPtFS3ZL
1hzuv99TRbLfJDuJD7c4IIj1wi5WFYtPPVWkXkwO5PF3x3JWpqZY/CBrd6zczBj6UCRmLifFYbKQ
Serk3amcTN69GX56Rp9+nBQfk7nKP30SSarlz7eXYjL54ys5OcwUXrycHFr6+yeRJN3nc1fKzWaT
VLmaieTuvdSzzKycli/lwZ/l65U1mXz1/ctXB/KA/olk/F5+eH11LuK4ybHUD5UunJlmWlZlmclV
pqp5aXOpilT+pNZKXrw95yfH//nh+mZ8MRYviqVI5kYkKpWZmMx/DOIm81s5uX9gDQ8nxcPZIemZ
nbw6OpJJYeWDDB/825F4YQq2wtT/ipG1+Cgn84s4NwuaX5SrypSFo3efJA348XidK7tweHnLD5B+
YfAvV+EFBtS5Lir/3KfOTMc8E2k9FS+WWzbq7fn4ze3Fzd3F9Qdxt9Q0yXlrzU10hnHwhyxXuiC/
iI7TGn/hP3y3rZYIBHbeVleyKP176LBStjKzOlM2kReVXNlybVINuWJe1kWqyFYWMoPNla1nVRRk
66LwQiq9sKrSqXTlvNooq49TvdZZuSKDef1c8pQZKsvKjfMLPa1NlmrrRFVCcqphWwop2VYGmV6e
rJaqaqeWG1MtJazSVq50ucr0CxcGulI4rfJMOwch27KWM1W8gFo6y+QGD2hZFiHKMJdj21ThZbkK
7oHyyc2N+PsSbjbFuryHpTRfWVfS6UxHl2w7zpRqtcrMjN03grJsexuQYlbmOU20MdCCZ4mD9jmI
raPvOfLfts4Vd2zj4U9v747kvC5mNJ/KTLWFLQqBkPql0irdwkQAgfbG3C0RO9CgVthbaqFlWs58
fPI8Qb3jzMA1TehyHOBr8dg6YipTUVROlcPUiBwafVsXlcm1vPYbRy51tsI4nVP87VgtEuCM/IOq
4WDr5EFZsBL00IGY/EvC++Pg5vL13bvr2yt5zZtkfCAujaMQnMI1G6isu3bIgR2I8hnigYZv5VpZ
U9aOF8/Jcr7HQustSMQVrbIfApxaq6zGVkE8IYQBelMt3UrPzNxAcu0oKsZbR4ZiwpVGbGC0NhxZ
3jc9BYV/hADlrfTA0ag8Ik298C0NwrPGRgXgRiUn3x3enQJosE/nZpGYwkAAfXgm5waIgKWDCD+F
EnH0aaYQNVDobOeJRP7swlSy2pQSq1xB8UrPloX5B8/La70qXQRqOatdVebm96ED43bx0z+yKtjQ
QAIfn++grlazZfN1jJUMyzzCzHB7aa12q7JIdx29lfd6S8otzBq79hAP/9d/HyXyNZZJ+M+M27Pj
wkLD1i1MxVObpZnx1hN7lWb7m2CiaQ6PMA2y3o2MPv5xctwBA3lq0jN5GPbEkYwuZ3w0BHUUPjYE
WRdGyL/QL5E0klc+WEcYJsq1ttYjN0K0+1iq51CZQ50kQt0UKI5gJbeRQOHRAP/0P2oDyR61gW1V
FQMg+hXrehFgLOlMQr6rSkG2JTvGW3jwlP7Hnp9VtdWw/3r8NzMwPviR8lVnrLf0m3TkJO0WJiE5
UbPe/Ds6zjKNTTzU6u9mhR3KX5FTZ4hH+BE5URGQNh6lp8TcqlxvSnvPKNhnHxE+JNvAkM9SBSMA
SXVeIBlUlTB6itSLHRXT32wLCHdlVvOC7kwQEz++s3qBDWK3rGW7gzGtpy1+dqD1bJCRyEkWIWEq
g/zxuw4Q57V7nvvZxiD6ANRBH+z6ncGqtmFrZKUPJwTIlTLFIED6g+PYkJSgGtwct02kP7xZRP/B
VAPGcmwJLAWRiFVWL45NERaGhCi8JnaAvyE5iEAHPMgEq10ix9rnmevCp8r3lNpIIUyiDGXm8fm5
fH05vvaJ6eiZnuwagLDWRC+JIbUe2+daRIyWH1elrT7txPY504MmfmUcfgiWDGdUQGKdAsouvEOD
FA87RDulq03FIpiEaTsK6YDe2pXVlIyV4xCnZynhNWDazEZojsjlkE6NxfZ0jO3IFaua/ULQ62GO
pCTyPYZu2cWgYtpVZqEav0FrUMEQAn6tnu1vUs/HbrQ9cB+drzASe4y5r58LEKvqrPKGUmJhLlD7
nJDoZERE0+evOAQEsyULR4+t3mW52JcrXgONMnwV3ETrQfzDBduIJb5wwqfEhPLuYbVdAaozMOCp
mt0HxzaJ2C0p3GEMYO4o+phUpqw35ezBFJSoSaqn9QKafLNnY9poTXsaGxhnu5DAERx90IwbvB8k
VIrkAljHwnYhwyHh0JYChw0ggEXjr0QzuAFlz7k8sDI/eVA5Kg1P72+BzzVQ1UU8AZvTzs+iXC9K
emrAQ5857A/VveJhlETcSs00ouKfhC/RTRFaOGM+Di0cAvJjKISZLO4CzE1d9aCY2JR/MC9TzcAy
kBDp2n4k8ewvui7S9EBjURe0ZXmXwrIzmP+imCSyElHfq7IqDTNPrC72jMkI0ASXzHEZGZqwFTxp
t7xv8XrLz4Qai43phBeip7e9R31HoBy1nPNDORWNkHttkKAC2jKOBlwOSFna7fNWO+5gWuXBEniF
ZA/jSJxBoMeSMrguAJuZs2pdMV1HfAnnUNTLj1DaojTajaG72haSU/a6jZoQI+1TDqVFRpUf1oAR
7dhpFHPckZhlylFpB/AK44XPQrzkaepJF2NhOxLBxbVHDAGOB6pKMVQJrsE7BR2bDFDDhuR+iK+B
vDwWh2lM8A5JElgcmiLyjgAm3QktrSY7X7UlVcpuoEwgWtmkOSvgWaXXgppCZG0sVQVToWfGyjpG
SuPvrwwSv2SdOAkC2PVfCIuYK1DFsfhTtpEsRh44h/pF+dCJk7FmS2INNISJBnmdnlFJQXCuFvrR
WVfwLlA4/dK0CMbBHu9PICvAKVeqQLKiaS74BVPUY2uIQ5gxkdxlYu9o1LmNJqEvZ733QrEgyqlf
7vb5oUlzKEAancYXj1Sf7MG9FehuvehBlYyy1HyKFHlqlS/FTUHxpppahfG2W5EaX+48m0EElQI9
i6aJfcVnW5Y9UVxE42mLD0OHyXEjhSoqPa+zSPz6nauIzzAoNe4z5ZZ/WonQqPjl9N0p8oaeuGi+
in3AbuXUCYHXvlTiZonVGWMtMSPhe8RYDk/qQ3VLQWv1HJ8uKV0Sf0UE2JMIeKFHMazUiLSFHLKq
7YIe/VAOQwlqjIi4ihipYU/6EX5usyjA4HwztCjlzxe+caOJMRNJ18kiGXEic0jTbindzGrdJLDU
qk1xtMeRfr2/IrTi0GF4dQvVtkhvuQqh9/CZqXJmNmhcNUUs92B5f31TmD6fNmbZV7LGBss73trf
Bhsa7HvB5vc2Kqi/zMTAuPvgutiSE0vVK8CqcuHJW9NEpyomAma3ybqj8eQ4dkeTzADekFC7yp8/
AO25Bv6C/v1Gi24ee0Eomq9UQWPdEm5MRZiImU4vSfqc2zyLScp7F7uitPxYDdEww8gtabNg2axB
NFHvrrSLJMKo9gktaYz8GKPxEyHegnwSm7csa2kW2MyVQJp1EdxDlaOD/jI6qgAcpU1TOkz523cN
tYW2yDVPuRww9Tx3RxxgCZxrw8lH8Kl41KdMosixnqn5h6eaNPXlR9BNNC5xMJNtZWd4cbEXF43v
dtYT8CGiQ/G7k9rZE1TYJ22AeMP88pIaAx92pXXkADlO2rzofdzIaOqkMKIr4+ipNXD1ilDSnVtL
hzH716BLg/Z6lCHUELJuuZGqSRrRyByiwZMQtiorqZ8WQagPXx15dLbEWYj3NlNdURd0MlEQl3em
qn2T7Amjfv31Sj3caJuPKQWeck/r7CtsG3XWuFGIuomzKpxH0ne/XPU0dELJcV3gY2aIRS+OvHsA
byXRJd+fQbXQLW2h+q+//tBR+N+Dws0qr/MWwfhsoOcurkRnasVvsUG8vnxiwlo5glFMLOLedzuu
4/A+9UT/rL/1+CsPtmGB/apUyt0jT1l/zNc0vzqZW/ijVVmvhpy3inLDCQ2/LoeRsKtlyMPZI8cL
XTF+XNuSHObS5tjVsxywjksRztpCsTkv6cw6dh2LVNlwLSGIxmz+pKtYE6EGD/nmYxZOsUXWTazZ
nqOLojx/MNWOyW+N4yVvgkv6rncPKRGras6HejsH1F2SRRmV99fOBp2HNpivfPcdhuwXL/eLf56L
yvGyrtJy84WzhqK8VL9vb8MByRsippel4oplDw95i4K8ggqV7vG0F65TpIejFua4WHiWJYjC5YGr
JPLHbSw+RwMyrTMdjj0tUTxF8DW3Zc7TDWQf8g5qOlRHiFwgBTdGqH87Esi89YwsyXXus39ZIel7
RGh5JZ/7uH0zwG3Yw1jSbCuDMsAz3qPYoc89IXzc5eH84tGl6j3z6HEpNQgLlck951/eLNrBoghH
7lPNFyGANABeayhn/C8s62n4JXPGvqro5JiRHFQKb2I9vdts3C1KgEKb3RxXOnlKqvoTEX8Ash8M
h6PCKWvnaLltqtHtmHJfHfHIgS0BrZP3BTQkT/ax1Vda8uGvfxnBKjw3ojsdSXL0vL1fugiPO3bv
eKft6sRXjxYgzdCGRe+tQHanYBr+JnTsdg8198/GLDOsQ5fLPtllDKgi4lmkP0wI0ATONtdWF1ge
XlPXbYGF8bFZJna+aclcrC6syYnTh0ZLIm+p4jdr3xoDw7G616y38evYWq2tpdWkjMC6d6uUwU09
UzmdzZ+9L/eswM5R6c6qhXrB38zYs1v+3zbFxONNsX3NMEKNgESnU1PlanX2JCSNQyD4jOGfCLVU
DI0eMnGB1e+Iiobq5iD/1KIPN4VIlz3YNtXzkhuodJPOW+sb7r9c7ZbEXuFwpcEEbh7U5JtGwoOW
xwo/0WXZ3ljxFym6394gngO0hY2360SfE7+9NP0MOtze8vBCerHv4ZeG8fa1vscbgHip1jpg8AVZ
ffyGzgDYigrMfFpX1H2mSPlimU+P83R8tm/45hswm4haPLABDxeP1sb9nsNgN0ePP6FAuN3yVGth
x+vULdw9DN7tsw17Afwc9ae8c5u3EUqdbzKGBmAHN4+aNmJEsetxeJw6bO3NVEbqYru/xzYkfXxt
IZy1/h93hpscSUp/ZYsOpeSpP1YqEYfYdev8aYTgyo2yZXuO1s/3uvNs9xqSaW48+fambq+3oigJ
GOMvvPUl8i3llpzwcQpYq+gm0WgC3dtq218/sPjmsPWz1dR4acroJoxHPE50rWa9Bg2uwygJH3xe
54krm47KyJ8YshhY4yWR1efF2tiy4JuDqQbkmcDL+ax6B97EU/70nTcVTpNRwi9AUKplToYHl7aX
dATDp7/GpqkiHQ37GFWzkh7tow+Z/YDYqYxMifjFDmHwrZs7ov4ifK+h2hnH8vkeBd0JMi5eJSq6
Bzv8+J6o5Nv1H/3f7z49GZGbL0TkY2HYnrNyzgl0sgWSrwvNQfozToSJckinZq+WoU0E8IiiuzdL
E3nOl1OHjcpwXbizYN2nRvvabmJvX4nImV4rBGB78fbQFLOsTuNC+pNwpjYxfadHwytDjFjBz+B+
ISSG0UALxt2EpyNC9iJC9CIiiNiJig2KnQ1wGDTisUonJoXesGeVOn0JX1Ph4Ik/vRrJvARxHMnn
VzibpsLpGxvuwccMcUA0+rP/3cnhy6ORZ9Wf/Tt/pbqvZi/p0A96llW1+uHkhO7ZN5kbWfyEfuQj
miv+4Z5U/A0C0uHfauqOn6EmCKkTr6+5gG2SaY/8ng1/D+AteXdxeT5mzhScvCGx7WX2cInHtR1v
Xc1O9vTE+YjWyowUlG962TeIaLrhf3x/fXV+Eq096XKW2O/57TQwkrPfiFKf9NL5ye5de2/M65/v
3l/fjvf95sVf95IbBQyyBgSKN+eMLgr4G8UXP14RKn5AfZZPYcir779/yb/uoV58acMo5a9QgqLW
OYVs/OWNBHqkpfVl32Dud+0PejC9iHNisp/ohyDIaZjrz3wxoegxHEDRMZxBhdLcEIxZKNJcjkN2
iNezsHAb6oTu/REFIUddmGr7yC9QyCVO5+a4j1sVKihHS9Hpj+38pOT93dWl/11J8xuKFXxWzgLN
J1Xwbgr6+urhOPfXkuHGG6BlKd/W0xI4cEpN8jJJ+d1/LHJwsARKY03/B7m0UURQNwAA
_EOF_
