#!/bin/bash
#
# install - an installer for Eclipse archives in Debian/Ubuntu/Mint
#
#    Copyright (C) 2012 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>

# ---------------------------------------------------------------
# User-modifiable stuff...

# App name in menus, Launchers, etc (inside .desktop file)
name=Eclipse

# executable (also affects dir, icon and .desktop file names)
exec=eclipse

# install prefix for system-wide install
sysprefix=/opt

# install prefix for user install
userprefix=$HOME/.local/opt

# install type: 1 for system-wide, 0 for user
system=0

# user (and group) name to own install dir and files in system-wide installs
owner=eclipse # there's no point in changing this...

# Default source for icon: tarball, embedded or user
iconsource=tarball

url=http://www.eclipse.org/downloads/
verbose=1

# Known files - do not edit unless embedded data or tarball icon does not match
icon_embedded=eclipse-48.png 
icon_tarball=icon.xpm
manpage=eclipse.1.gz

# ---------------------------------------------------------------
# Boring UI stuff...

myname="${0##*/}"
mydir=$(dirname "$(readlink -f "$0")")
extractmanual=0
extracticon=0
size=0

fatal()   { [[ "$1" ]] && echo "$myname: error: $1" >&2 ; exit ${2:-1} ; }
invalid() { echo "$myname: invalid option: $1" >&2 ; usage 1 ; }
missing() { echo "$myname: missing ${1:+$1 }operand" >&2 ; usage 1 ; }
message() { ((verbose)) && echo "$1" ; }
quit()    { message "Goodbye!" ; exit; }
extract() { message "Extracting $1" ; decode "$1" > "$1" ; exit ; }
decode(){
    # Generated by dataembed
    # Usage: decode [--find] FILE
    # Feel free to move this function to a more convenient location,
    # and also to remove the comments. Closing } must be on a line of its own
    # This function will only be re-created if deleted
    local s f;while(($#));do case "$1" in --find)s=1;; *)f=$1;;esac;shift;done
    if d=$(awk -v f="$f" -v p=0 -v e=0 -v s=$s 'p&&/^_EOF_$/{exit}p{print;next
    } e&&/^:<<"_EOF_"$/{getline;if($0==f){p=1;if(s)exit}} /^exit;:$/{e=1} END{
    exit !p}' "$(readlink -f "$0")");then base64 -d <<<"$d"; else return 1; fi
}

usage() {
	cat <<- USAGE
	Usage: $myname [options] [--|--tarball FILE]
	USAGE
	if [[ "$1" ]] ; then
		cat >&2 <<- USAGE
		Try '$myname --help' for more information.
		USAGE
		exit 1
	fi
	cat <<USAGE

An installer for Eclipse in Debian/Ubuntu/Mint

Allows system-wide or per-user install, and also coexistence of multiple
versions. Extracts original tarball and properly creates desktop file, icon,
executable and, if system install, man page.

Also, for system install, creates "$owner" user and group and add current user
to group. This allows plugins and software updates to be installed by the user,
and be available to all users.

Tested with Eclipse 3.5, 3.6, 3.7 and 4.2

Options:
-h|--help  - show this page.
-q|--quiet - supress informative messages.

--system
--user
	choose system-wide or per-user install. Default is system

--exec=NAME
	executable name, also used as a prefix for naming the install directory,
	icon and .desktop files. Default is "$exec"

--prefix=DIR
	parent of the install directory. Default is "$sysprefix"

--name=NAME
	friendly application name, for menu entries. Default is "$name"

--tarball-icon
--embedded-icon
	Use either the embedded icon in install file (recommended for
	eclipse 3.x) or the icon inside the tarball archive (for eclipse 4.x).
	Default is to use the $iconsource icon.

--custom-icon=FILE [--icon-size=SIZE]
	Use the custom icon FILE. If ImageMagik is not installed and icon is not
	a conventional .xpm file, icon SIZE (32, 48, 64, etc) must be provided.

--tarball=FILE
	the tar.gz install archive downloaded from Eclipse website. If none is
	provided, a menu will show currently downloaded files.

--extract-manual
--extract-icon
	Only extract the either the manual page "$manpage" or the icon embedded
	in install file "$icon_embedded" to current dir, and exit.
	Do not perform any install.

--uninstall
	Uninstall ${name}. Combine with --system, --exec and --prefix to
	uninstall from a custom install

Copyright (C) 2012 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
USAGE
	exit 0
}

for arg in "$@"; do case "$arg" in -h|--help) usage ;; esac; done
while (( $# )); do
	case "$1" in
	-h|--help        ) usage                        ;;
	-q|--quiet       ) verbose=0                    ;;
	--name=*         ) name="${1#*=}"               ;;
	--exec=*         ) exec="${1#*=}"               ;;
	--prefix=*       ) prefix="${1#*=}"             ;;
	--tarball=*      ) tarball="${1#*=}"            ;;
	--icon-size=*    ) size="${1#*=}"               ;;
	--custom-icon=*  ) icon="${1#*=}"
	                   iconsource="user"            ;;
	--name           ) shift ; name="$1"            ;;
	--exec           ) shift ; exec="$1"            ;;
	--prefix         ) shift ; prefix="$1"          ;;
	--tarball        ) shift ; tarball="$1"         ;;
	--icon-size      ) shift ; size="$1"            ;;
	--custom-icon    ) shift ; icon="$1"
	                   iconsource="user"            ;;
	--tarball-icon   ) iconsource="tarball"         ;;
	--embedded-icon  ) iconsource="embedded"        ;;
	--extract-manual ) extractmanual=1              ;;
	--extract-icon   ) extracticon=1                ;;
	--system         ) system=1                     ;;
	--user           ) system=0                     ;;
	--               ) shift ; tarball="$1"   break ;;
	*                ) invalid "$1" ; shift ; break ;;
	esac
	shift
done

# Extraction (and exit)--------------------------------------------

(( extractmanual )) && extract "$manpage"
(( extracticon   )) && extract "$icon_embedded"

# Other arguments      --------------------------------------------

[[ "$name" ]] || missing "name"
[[ "$exec" ]] || missing "exec"

case "$iconsource" in
	embedded ) icon="$dir/$icon_embedded" ;;
	tarball  ) icon="$icon_tarball"  ;;
	user     ) [[ "$icon" ]]    || missing "custom-icon"
	           [[ -f "$icon" ]] ||
			fatal "custom icon file '$icon' not found" ;;
esac

if (( system )) ; then
	[[ "$prefix" ]] || prefix=$sysprefix
	execdir=/usr/local/bin
	appdir=/usr/local/share/applications
	mandir=/usr/local/share/man/man1/$manpage
	sudo=sudo
	label="system"
else
	[[ "$prefix" ]] || prefix=$userprefix
	execdir=$HOME/.local/bin
	appdir=$HOME/.local/share/applications
	sudo=env
	label="user"
fi

((verbose)) && v=v

dir=${prefix}/${exec}
config=".eclipse" # if system install, regardless of $exec


# Uninstall  ---------------------------------------------

((uninstall)) && {

	msg="Are you sure you want to remove ${exec} ${label} install?"
	read -r -p "$msg (yes,NO): " confirm
	case "$confirm" in
	[Yy]*)
		message "removing desktop file"
		$sudo rm -rf "$appdir/$exec.desktop"
		$sudo update-desktop-database "$appdir"

		message "removing icon"
		for icon in "$dir"/bin/*.png ; do
			size=${icon##*-}
			size=${size%%.*}
			$sudo xdg-icon-resource uninstall --noupdate \
				--size "$size" "$exec" 2>/dev/null
		done
		$sudo xdg-icon-resource forceupdate

		message "removing executable"
		$sudo rm -rf "$execdir/$exec"

		message "removing install dir"
		$sudo rm -rf "$dir"


		message "Successfully uninstalled $name"
	;;
	esac

#read -r -p "Remove any previously ${label}-installed Eclipse? (yes,NO): " confirm
#case "$confirm" in
#[Yy]*)
#	message "removing cruft from all other Eclipse $label installs"
#	if (( system )); then
#		#sudo apt-get purge eclipse
#		sudo rm -rf {/opt,/usr/local{/bin,/share{/applications,/icons/hicolor/48x48/apps,/man/man1}}}/eclipse*
#	else
#		rm -rf "$HOME"/.local{/opt,/bin,/share{/applications,/icons/hicolor/48x48/apps}}/eclipse*
#	fi
#;;
#esac

	exit
}

# ---------------------------------------------------------------
# Installer begins here (but still boring)

((verbose)) && printf "\n${name^^} INSTALLER\n\n"

[[ "$tarball" ]] || {

	cd "$mydir"
	shopt -s nullglob
	options=( *.tar.gz "Download more at $url" )
	shopt -u nullglob

	message "Available installs:"
	PS3="Choose an install (0 to quit): "

	select tarball in "${options[@]}"; do
		((REPLY==${#options[@]})) && {
			message "Opening your web browser..." ;
			message "Choose your Eclipse flavor(s), download and save to"
			message "$mydir"
			message "... and run me again"
			xdg-open "$url"
			REPLY=0
		}
		((REPLY==0)) && quit
		[[ "$tarball" ]] && break
	done
	echo ""
	tarball="${mydir}/${tarball}"
	cd - >/dev/null
}

((verbose)) && {
	echo "Install details:"
	echo "Install Type = $label"
	echo "App name     = $name"
	echo "Executable   = $exec"
	echo "Icon         = $icon"
	echo "Icon Source  = $iconsource"
	echo "Install dir  = $dir"
	echo "Source       = $(basename "$tarball")"
	echo "To change these options, see $myname --help"
	read -r -p "Confirm? (YES,no): " confirm
	case "$confirm" in
	[Nn]*) quit
	esac
	echo ""
}

read -r -p "Remove any previously ${label}-installed Eclipse? (yes,NO): " confirm
case "$confirm" in
[Yy]*)
	message "removing cruft from all other Eclipse $label installs"
	if (( system )); then
		#sudo apt-get purge eclipse
		sudo rm -rf {/opt,/usr/local{/bin,/share{/applications,/icons/hicolor/48x48/apps,/man/man1}}}/eclipse*
	else
		rm -rf "$HOME"/.local{/opt,/bin,/share{/applications,/icons/hicolor/48x48/apps}}/eclipse*
	fi
	[[ -d "$HOME"/.eclipse ]] && {
		read -r -p "Remove personal settings in ~/.eclipse? They won't be needed anymore. (yes,NO): " confirm
		case "$confirm" in
		[Yy]*)
			message "removing ~/.eclipse"
			rm -rf "$HOME"/.eclipse
		;;
		esac
	}
;;
esac

#TODO: if type eclipse, warn about overwriting (if system)
#      or eclipsing (if user) current system install

[[ -e "$dir" ]] && {
	read -r -p "Install directory $dir already exists. Delete it before proceding? (yes,NO): " confirm
	case "$confirm" in
	[Yy]*) message "removing $dir" ;
	       $sudo rm -rf "$dir" || fatal "could not remove $dir" ;;
	    *) quit
	esac
}

[[ -d "$HOME/$config" ]] && {
	msg="Delete settings in $HOME/$config? "
	msg+="They won't be needed anymore. (yes,NO): " confirm
	read -r -p "$msg (yes,NO): " confirm
	case "$confirm" in
	[Yy]*)
		message "removing $HOME/$config"
		rm -rf "$HOME/$config"
	;;
	esac
}

[[ "$exec" == eclipse && -e "/usr/bin/eclipse" ]] && {
	msg="You've chosen the default 'eclipse' name, and eclipse is\nalready "
	msg+="installed via package manager at /usr/bin/eclipse\nNo files will"
	msg+=" be overwritten, but that install will be be\nunaccessible unless"
	msg+=" you invoke it by its full path name.\nIf you want to remove it"
	msg+=" first, exit now and issue:\n	apt-get purge eclipse*\n"
	printf "$msg"
	msg="Do you want to proceed?"
	read -r -p "$msg (yes,NO): " confirm
	case "$confirm" in
	[Nn]*) quit
	esac
}

# ---------------------------------------------
# Some neat helper functions

icon_size()
{
	local icon="$1"
	local size="$2"
	local filetitle="${icon%.*}"
	
	((size)) && { echo "$size" ; return ; }
	
	if type identify >/dev/null 2>&1; then
		identify -format '%w' "$icon"
	else
		if [[ "${filetitle,,}.xpm" == "$icon" ]]; then
			awk 'NR==3{print $2}' "$icon"
		else
			return 1
		fi
	fi
}

# ---------------------------------------------
# Now the fun begins

{ ((system)) && ! id "$owner" > /dev/null 2>&1 ; } && {
	message "creating $owner user and group"
	sudo useradd --system "$owner" ||
		fatal "could not create user $owner"
}

$sudo mkdir -p${v} "$dir" ||
	fatal "could not create install dir $dir"

message "extracting $(basename "$tarball") to $dir"
$sudo tar -xzf "$tarball" --strip-components=1 --directory "$dir" ||
	fatal "could not extract source $tarball in $dir"

((system)) && {
	message "adjusting ownership and permitions in $dir"
	sudo chown -R "${owner}:" "$dir"        || fatal "could not set owner of $dir to $owner"
	sudo chmod -R g+w "$dir"                || fatal "could not set permitions $dir to g+w"

	message "including your user $USER to $owner group"
	sudo usermod --append --groups "$owner" "$USER" || fatal "could not add $USER user to $owner group"

	message "installing man page to $mandir/$manpage"
	sudo mkdir -p${v} "$mandir"
	sudo dd of="$mandir/$manpage" status=noxfer < <(decode "$manpage") 2>/dev/null ||
		fatal "could not install manpage to $mandir/$manpage"
}

message "creating symlink to $dir/eclipse executable in $execdir/$exec"
$sudo mkdir -p${v} "$execdir"               || fatal "could not create executable directory $execdir"
$sudo rm -f "$execdir/$exec" && $sudo ln -s "$dir/eclipse" "$execdir/$exec" ||
	fatal "could not create symlink $execdir/$exec"

message "installing icon"
case "$iconsource" in
	embedded)
		$sudo dd of="$dir/$icon" status=noxfer < <(decode "$icon") \
			2>/dev/null || fatal "could not extract embedded icon"
		icon="$dir/$icon_embedded"
		size=${icon##*-}
		size=${size%%.*}
	;;
	tarball)
		size=$(icon_size "$dir/$icon_tarball" "$size") ||
			fatal "could not determine icon size. Use --icon-size=SIZE"
		filetitle=${icon_tarball%.*}
		fileext=${icon_tarball#"$filetitle"}
		icon="${dir}/${filetitle}-${size}.${fileext}"
		$sudo mv "$dir/$icon_tarball" "$icon"
	;;
	user)
		size=$(icon_size "$dir/$icon" "$size") ||
			fatal "could not determine icon size. Use --icon-size=SIZE"
		filetitle=${icon%.*}
		fileext=${icon#"$filetitle"}
		newicon="${filetitle}-${size}.${fileext}"
		$sudo cp "$icon" "$dir/$newicon"
		icon=$newicon
esac
$sudo xdg-icon-resource install --novendor --size "$size" "$icon" "$exec" ||
	fatal "could not install icon"

message "creating desktop file in $appdir/$exec.desktop"
$sudo mkdir -p${v} "$appdir" || fatal "could not create desktop directory $appdir"
{ $sudo dd of="$appdir/$exec.desktop" status=noxfer 2>/dev/null ||
  fatal "could not desktop entry $appdir/$exec.desktop" ; } <<-DESKTOP
	[Desktop Entry]
	Version=1.0
	Type=Application
	Name=$name
	Comment=Eclipse Integrated Development Environment
	Icon=$exec
	Exec=$exec
	Terminal=false
	StartupNotify=true
	Categories=Development;IDE;Java;
DESKTOP

((system)) || {
	addpath=1
	SAVED_IFS=$IFS
	IFS=:
	for pathdir in $PATH ; do
		[[ "$pathdir" == "$execdir" ]] && { addpath=0 ; break ; }
	done

	((addpath)) && {
		logout=1
		relexecdir=${execdir#$HOME/}
		message "adding ~/${relexecdir} to you \$PATH in ~/.profile"
		cat >> "$HOME/.profile" <<-EOF

		# Included by $name $label install
		# set PATH so it includes user's ~/${relexecdir} if it exists
		if [ -d "\$HOME/$relexecdir" ] ; then
		    PATH="\$HOME/$relexecdir:\$PATH"
		fi
		EOF
	}
	IFS=$SAVED_IFS
}

message ""
message "Succesfully installed ${name}!"
((logout)) && echo "Log out for changes to apply..."


# eclipse.png from debian's package. it looks MUCH better than eclipse's
# original icon. And converting from PNG to XPM does not help much, since PNG
# supports alpha transparency and XPM does not. So the PNG is encoded here
# Also encoded debian's man page for Eclipse, source archive misses it

# Generated by dataembed - DO NOT EDIT AFTER THIS LINE! ---------------
exit;:
:<<"_EOF_"
eclipse-48.png
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
AF7FbgCmfZ6WAAAAAElFTkSuQmCC
_EOF_
:<<"_EOF_"
eclipse.1.gz
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
o1E3AAA=
_EOF_
